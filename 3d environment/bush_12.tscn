[gd_scene load_steps=10 format=4 uid="uid://1x3vqx0orvy1"]

[ext_resource type="PackedScene" uid="uid://tdrom6qur4r1" path="res://3d environment/bush1.glb" id="1_bnslt"]
[ext_resource type="Texture2D" uid="uid://cg0gsrdy1jrud" path="res://3d environment/bush_atlas_normal.png" id="2_cecha"]

[sub_resource type="Shader" id="Shader_1chtr"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.3.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_disabled, diffuse_burley, specular_schlick_ggx, depth_prepass_alpha, world_vertex_coords;

uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color, filter_nearest_mipmap, repeat_enable;
uniform float point_size : hint_range(0.1, 128.0, 0.1);

uniform float roughness : hint_range(0.0, 1.0);
uniform sampler2D texture_metallic : hint_default_white, filter_nearest_mipmap, repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r, filter_nearest_mipmap, repeat_enable;

uniform float specular : hint_range(0.0, 1.0, 0.01);
uniform float metallic : hint_range(0.0, 1.0, 0.01);

uniform sampler2D texture_normal : hint_roughness_normal, filter_nearest_mipmap, repeat_enable;
uniform float normal_scale : hint_range(-16.0, 16.0);

uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

group_uniforms wind;
uniform sampler2D noise_tex;
uniform float wind_speed = .1;
uniform float wind_strength = .01;

void vertex() {
	UV = UV * uv1_scale.xy + uv1_offset.xy;

	float offset = TIME * wind_speed;
	float noise = texture(noise_tex, NODE_POSITION_WORLD.xz - offset).r;
	noise -= .5;
	noise *= wind_strength;
	VERTEX.x += noise * length(VERTEX.y - NODE_POSITION_WORLD.y);
}

void fragment() {
	vec2 base_uv = UV;

	vec4 albedo_tex = texture(texture_albedo, base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;

	float metallic_tex = dot(texture(texture_metallic, base_uv), metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	SPECULAR = specular;

	vec4 roughness_texture_channel = vec4(1.0, 0.0, 0.0, 0.0);
	float roughness_tex = dot(texture(texture_roughness, base_uv), roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;

	// Normal Map: Enabled
	NORMAL_MAP = texture(texture_normal, base_uv).rgb;
	NORMAL_MAP_DEPTH = normal_scale;
	ALPHA *= albedo.a * albedo_tex.a;
}
"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_48bqy"]
frequency = 0.005
fractal_octaves = 1

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_eycbm"]
seamless = true
noise = SubResource("FastNoiseLite_48bqy")

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_d1hua"]
load_path = "res://.godot/imported/bush1_bush1_texture.png-698f421c8a6fc659d84b42385c6f6e03.s3tc.ctex"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_2cees"]
resource_name = "bush1"
render_priority = 0
shader = SubResource("Shader_1chtr")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 0.5
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/normal_scale = 1.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = SubResource("CompressedTexture2D_d1hua")
shader_parameter/texture_normal = ExtResource("2_cecha")
shader_parameter/wind_speed = 0.1
shader_parameter/wind_strength = 0.2
shader_parameter/noise_tex = SubResource("NoiseTexture2D_eycbm")

[sub_resource type="ArrayMesh" id="ArrayMesh_qa7ly"]
_surfaces = [{
"aabb": AABB(-1, -0.0322908, -1, 2, 2, 2),
"format": 34896613377,
"index_count": 12,
"index_data": PackedByteArray("AAADAAEAAAACAAMABAAHAAUABAAGAAcA"),
"name": "bush1",
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 8,
"vertex_data": PackedByteArray("AAAAAP9/AAD//wAA/38AAAAA////fwAA//////9/AAD/fwAA//8AAP9/AAAAAAAA/3//////AAD/f///AAAAAA==")
}]
blend_shape_mode = 0

[sub_resource type="ArrayMesh" id="ArrayMesh_xnprf"]
resource_name = "bush1_Plane_023"
_surfaces = [{
"aabb": AABB(-1, -0.0322908, -1, 2, 2, 2),
"attribute_data": PackedByteArray("//z//Cw/33D//P8CLD+GMv8C//zTAN9w/wL/AtMAhjL//P/8K/8r///8/wIr/9LA/wL//NLAK///Av8C0sDSwA=="),
"format": 34896613431,
"index_count": 12,
"index_data": PackedByteArray("AAADAAEAAAACAAMABAAHAAUABAAGAAcA"),
"material": SubResource("ShaderMaterial_2cees"),
"name": "bush1",
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 8,
"vertex_data": PackedByteArray("AAAAAP9//7///wAA/3//vwAA////f/+///////9//7//fwAA//9U1f9/AAAAAFTV/3//////VNX/f///AABU1f9//3//f/9//3//f/9//3+qqlRVqqpUVaqqVFWqqlRV")
}]
blend_shape_mode = 0
shadow_mesh = SubResource("ArrayMesh_qa7ly")

[node name="bush12" instance=ExtResource("1_bnslt")]

[node name="bush1" parent="." index="0"]
mesh = SubResource("ArrayMesh_xnprf")
